{"version":3,"sources":["reducers/productosReducer.js","reducers/index.js","types/types.js","store.js","componentes/Header.js","config/index.js","actions/listarProductosAction.js","componentes/Productos.js","componentes/TablaProductos.js","actions/mostrarProductoAction.js","componentes/Producto.js","componentes/CheckOut.js","App.js","serviceWorker.js","index.js"],"names":["initialState","productos","error","producto","combineReducers","state","action","type","payload","middleware","thunk","store","createStore","reducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","Header","className","name","content","to","clienteAxios","axios","create","baseURL","listarProductosAction","dispatch","get","then","res","listarProductos","data","catch","listarProductosError","Productos","useDispatch","map","key","scope","id","title","unit_price","quantity","TablaProductos","useEffect","useSelector","mostrarProducto","mostrarProductoError","Producto","match","productoSeleccionado","params","mostrarProductoAction","CheckOut","console","log","onSubmit","e","preventDefault","post","src","data-public-key","data-transaction-amount","prod","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d322da61.chunk.js","sourcesContent":["import {LISTAR_PRODUCTOS,LISTAR_PRODUCTOS_ERROR, MOSTRAR_PRODUCTO,MOSTRAR_PRODUCTO_ERROR} from '../types/types';\r\n\r\nconst initialState = {\r\n    productos:[],\r\n    error: '',\r\n    producto:{}\r\n}\r\n\r\nexport default function(state=initialState,action){\r\n    switch(action.type){\r\n        case LISTAR_PRODUCTOS:\r\n            return{\r\n            ...state,\r\n            productos : action.payload,\r\n            error:false\r\n\r\n        }\r\n        case LISTAR_PRODUCTOS_ERROR:\r\n            return{\r\n                ...state,\r\n                productos:[],\r\n                error: action.payload\r\n            }\r\n        case MOSTRAR_PRODUCTO:\r\n            return{\r\n                ...state,\r\n                producto: action.payload,\r\n                error:false\r\n\r\n            }\r\n        case MOSTRAR_PRODUCTO_ERROR:\r\n            return{\r\n                ...state,\r\n                productos:[],\r\n                producto:{},\r\n                error : action.payload\r\n            }        \r\n        \r\n        default: \r\n        return {state}\r\n    }\r\n    \r\n}","import {combineReducers} from 'redux';\r\nimport productosReducer from './productosReducer';\r\n\r\nexport default combineReducers({\r\n    productos : productosReducer\r\n})\r\n","export const LISTAR_PRODUCTOS = \"LISTAR_PRODUCTOS\";\r\nexport const LISTAR_PRODUCTOS_ERROR = \"LISTAR_PRODUCTOS_ERROR\"\r\n \r\nexport const MOSTRAR_PRODUCTO = \"MOSTRAR_PRODUCTO\"\r\nexport const MOSTRAR_PRODUCTO_ERROR = \"MOSTRAR_PRODUCTO_ERROR\";\r\n","import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './reducers';\r\n\r\nconst initialState= []\r\n\r\nconst middleware=[thunk]\r\n\r\nconst store = createStore(reducer,initialState,compose(applyMiddleware(...middleware),window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\r\n\r\nexport default store;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Header(){\r\n    return(\r\n        <div className=\"d-flex justify-content-between col-md-8 m-auto\">\r\n           <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"/>\r\n            <Link to={'/'} className=\"navbar nav-link\">Home</Link>\r\n                <h2>Tiendita</h2>\r\n            <Link to={'/products/create'} className=\"navbar nav-link\">Create</Link>\r\n                  \r\n        </div>\r\n      \r\n    )\r\n}","import axios from 'axios';\r\n\r\nconst clienteAxios = axios.create({\r\n    baseURL : 'http://localhost:4000'\r\n})\r\n\r\nexport default clienteAxios;","import {LISTAR_PRODUCTOS,LISTAR_PRODUCTOS_ERROR} from '../types/types';\r\nimport clienteAxios from '../config/index';\r\n\r\nexport function listarProductosAction(){\r\n        return(dispatch)=>{\r\n            clienteAxios.get('/productos')\r\n            .then(res=>{\r\n                dispatch(listarProductos(res.data))\r\n            })\r\n            .catch(error=>{\r\n                dispatch(listarProductosError(error))\r\n            }\r\n            )}  \r\n}\r\n\r\nexport const listarProductos = (productos) =>({\r\n    type : LISTAR_PRODUCTOS,\r\n    payload: productos\r\n})\r\n\r\nexport const listarProductosError = (error) =>({\r\n    type: LISTAR_PRODUCTOS_ERROR,\r\n    payload : error\r\n})","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {listarProductosError} from '../actions/listarProductosAction';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Productos({productos}){\r\n\r\n    const dispatch = useDispatch();\r\n    if(!productos){\r\n        dispatch(listarProductosError());\r\n        return null;\r\n    }\r\n    return(\r\n        productos.map(producto=>(\r\n            <tr key={producto}>          \r\n            <th scope=\"row\">{producto.id}</th>\r\n            <td>{producto.title}</td>\r\n            <td>{producto.unit_price}</td>\r\n            <td>{producto.quantity}</td>\r\n            <Link to={`/productos/${producto.id}`} className=\"btn btn-info\">Ver</Link>\r\n        </tr>\r\n        ))\r\n    )\r\n}\r\n\r\n","import React,{useEffect} from 'react';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Productos from './Productos';\r\n\r\nimport {listarProductosAction} from '../actions/listarProductosAction';\r\n\r\nexport default function TablaProductos(){\r\n\r\n    const dispatch = useDispatch();\r\n \r\n    useEffect(\r\n        ()=>{\r\n        const mostrarProductos =  () =>dispatch(listarProductosAction());\r\n        mostrarProductos()\r\n    },[dispatch]\r\n    ) \r\n    const productos = useSelector( state=>state.productos.productos);\r\n    \r\n    return(\r\n        <div className=\"col-md-8 m-auto\">\r\n            \r\n        <table className=\"table table-hover mt-5\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Nombre</th>\r\n                        <th scope=\"col\">Precio</th>\r\n                        <th scope=\"col\">Cantidad</th>\r\n                        <th scope=\"col\">Accion</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <Productos\r\n                        productos={productos}\r\n                    />\r\n                </tbody>\r\n        </table>\r\n\r\n        </div>\r\n    )\r\n}","import {MOSTRAR_PRODUCTO,MOSTRAR_PRODUCTO_ERROR} from '../types/types';\r\nimport clienteAxios from '../config';\r\n\r\nexport function mostrarProductoAction(id){\r\n   return(dispatch)=>{\r\n       clienteAxios.get(`http://localhost:4000/productos/${id}`)\r\n       .then(res=>{\r\n            dispatch(mostrarProducto(res.data))\r\n       })\r\n       .catch(error =>{\r\n           dispatch(mostrarProductoError(error))\r\n       }) \r\n    } \r\n}\r\n\r\nexport const mostrarProducto =(producto) =>({\r\n    type : MOSTRAR_PRODUCTO,\r\n    payload : producto\r\n})\r\n\r\nexport const mostrarProductoError = (error) =>({\r\n    type : MOSTRAR_PRODUCTO_ERROR,\r\n    payload : error\r\n})","import React,{useEffect} from 'react';\r\n\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {mostrarProductoAction} from '../actions/mostrarProductoAction';\r\n\r\nexport default function Producto({match}){\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productoSeleccionado = useSelector( state => state.productos.producto);\r\n   \r\n    const {id} = match.params;\r\n\r\n    useEffect(\r\n        ()=>{\r\n            dispatch(mostrarProductoAction(id))\r\n         },[dispatch,id]\r\n    )\r\n       \r\n    if(!productoSeleccionado) return null\r\n    return(\r\n      <div className=\"col-md-6 m-auto\">\r\n            <div className=\"card border-secondary mb-3 mt-5\">\r\n                <div className=\"card-header\"><h3 className=\"text-center font-weight-bold text-uppercase\">{productoSeleccionado.title}</h3></div>\r\n                    <div className=\"card-body\">\r\n                        <ul className=\"list-group list-group-flush\">\r\n                            <li className=\"list-group-item font-weight-bold\">Precio: ${productoSeleccionado.unit_price}</li>\r\n                            <li className=\"list-group-item font-weight-bold\">Cantidad disponible: {productoSeleccionado.quantity}</li>\r\n                        </ul>\r\n                    </div>\r\n            </div>\r\n      </div>\r\n     \r\n    )}\r\n   ","import React, { useEffect } from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {listarProductosAction} from '../actions/listarProductosAction';\r\nimport clienteAxios from 'axios';\r\n\r\n\r\nfunction CheckOut(){\r\n    \r\nconst dispatch = useDispatch();    \r\n useEffect(\r\n     ()=>{\r\n         const productos = ()=>dispatch(listarProductosAction());\r\n         productos()\r\n     },[dispatch]\r\n )\r\n  \r\n\r\nconst producto = useSelector( state => state.productos.productos)\r\nif(!producto) return null\r\nconsole.log(producto);\r\n\r\nconst btnMercadoPago = (e) =>{\r\n    e.preventDefault();\r\n    clienteAxios.post(`http://localhost:4000/productos`)\r\n    .then(res=>{\r\n        return(\r\n                         <script\r\n                            src=\"https://www.mercadopago.com.ar/integrations/v1/web-tokenize-checkout.js\"\r\n                            data-public-key=\"TEST-fef34835-9bf5-4459-860c-33fb75c59832\"\r\n                            data-transaction-amount=\"9000.00\">\r\n                        </script>\r\n        )\r\n                        \r\n    })\r\n\r\n}        \r\n \r\n\r\n    return(\r\n        <div>\r\n            <h2>CheckOut</h2>\r\n            <div className=\"col-md-6 m-auto\">\r\n            <div>\r\n                <form onSubmit={btnMercadoPago}>\r\n                <button type=\"submit\" className=\"btn btn-success\">Pagar</button>\r\n                </form>\r\n            </div>\r\n            \r\n                {producto.map(prod=>(\r\n                              <div className=\"card border-secondary mb-3 mt-5\">\r\n                              <div className=\"card-header\"><h3 className=\"text-center font-weight-bold text-uppercase\">{prod.title}</h3></div>\r\n                                  <div className=\"card-body\">\r\n                                      <ul className=\"list-group list-group-flush\">\r\n                                      <li className=\"list-group-item font-weight-bold\">Precio: ${prod.unit_price} </li>\r\n                                      <li className=\"list-group-item font-weight-bold\">Cantidad disponible: {prod.quantity}</li>\r\n                                      </ul>\r\n                                  </div>\r\n                          </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckOut;","import React from 'react';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nimport Header from './componentes/Header';\nimport TablaProductos from './componentes/TablaProductos';\nimport Producto from './componentes/Producto';\nimport CheckOut from './componentes/CheckOut';\n\n\nfunction App() {\n  return (\n    <Provider store = {store}>\n      <div className=\"container\">\n    <Router>\n      <Header/>\n          <Switch>\n              <Route exact path={`/mpprueba`} component={TablaProductos}/>\n              <Route exact path={'/productos/checkout'} component={CheckOut}/>\n              <Route exact path={`/productos/:id`} component={Producto}/>\n              \n          </Switch>\n    </Router>\n        \n          \n      </div>\n    </Provider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}